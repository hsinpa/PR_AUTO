name: AUTO PR Review
on:
  pull_request:
    types:
      - opened
      - reopened
  issue_comment:
    types:
      - created

jobs:
  auto-bot-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout PR repository
        uses: actions/checkout@v4

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: SSS-Core-AI/pull-request-review-bot
          path: pull-request-review-bot
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv with caching
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: |
            pull-request-review-bot/pyproject.toml
            pull-request-review-bot/uv.lock

      - name: Debug Environment
        working-directory: pull-request-review-bot
        run: |
          echo "=== GitHub Context ==="
          echo "Event name: '${{ github.event_name }}'"
          echo "Event action: '${{ github.event.action }}'"

      - name: Create .env file with multiple variables
        working-directory: pull-request-review-bot
        run: |
          cat << EOF > .env
          LLM_MODEL=gemini-2.5-flash-lite
          LLM_PROVIDER=google_genai
          LLM_API_KEY=${{secrets.LLM_API_KEY}}
          LANGFUSE_SECRET_KEY=${{secrets.LANGFUSE_SECRET_KEY}}
          LANGFUSE_PUBLIC_KEY=${{secrets.LANGFUSE_PUBLIC_KEY}}
          LANGFUSE_HOST=${{secrets.LANGFUSE_HOST}}
          BOT_GH_TOKEN=${{secrets.GITHUB_TOKEN}}
          EVENT_NAME=${{github.event_name}}
          $([ -n "${{secrets.LLM_API_BASE}}" ] && echo "LLM_API_BASE=${{secrets.LLM_API_BASE}}")
          $([ -n "${{secrets.LLM_API_VERSION}}" ] && echo "LLM_API_VERSION=${{secrets.LLM_API_VERSION}}")
          EOF

      - name: Install packages
        working-directory: pull-request-review-bot
        run: uv sync

      - name: Execute
        working-directory: pull-request-review-bot
        env:
          GITHUB_EVENT_JSON: ${{ toJSON(github.event) }}
        run: |
          uv run python -m main "$GITHUB_EVENT_JSON"